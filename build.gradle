apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'idea'

def frameworkVersion = '0.5.3-SNAPSHOT'

def isReleaseVersion = !frameworkVersion.endsWith("SNAPSHOT")

ext {
   groovy = 'org.codehaus.groovy:groovy-all:2.2.0'
   packageGroovy = false
}

def mavenPom = pom {
            groupId = 'com.directmyfile'
            version = frameworkVersion
            artifactId = project.name
            project {
                name project.name
                packaging 'jar'
                description 'A Groovy-based IRC Framework'
                inceptionYear '2013'
                url 'http://www.directmyfile.com/'

                scm {
                    url 'https://github.com/DirectMyFile/NanoBot/'
                    connection 'scm:git:git://github.com/DirectMyFile/NanoBot.git'
                    developerConnection 'scm:git:git@github.com:DirectMyFile/NanoBot.git'
                }

                issueManagement {
                    system 'jira'
                    url 'https://directmyfile.atlassian.net/'
                }

                licenses {
                    license {
                        name 'GNU Lesser General Public License (LGPL), Version 3'
                        url 'http://www.gnu.org/licenses/lgpl.txt'
                        distribution 'repo'
                    }
                }
            }
        }

repositories {
    mavenCentral()

    maven {
        url 'https://oss.sonatype.org/content/repositories/snapshots/'
    }
}

compileGroovy {
    sourceCompatibility = '1.6'
    targetCompatibility = '1.6'
}

compileJava {
    sourceCompatibility = '1.6'
    targetCompatibility = '1.6'
}

jar {
    manifest {
        attributes('Main-class': 'TestNanoBot')
    }
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives jar
    archives sourcesJar
    archives javadocJar
}

dependencies {
    compile "${groovy}"
    testCompile 'junit:junit:4.11'
}

jar {
    if (packageGroovy) {
        from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

signing {
    required { isReleaseVersion && gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

if (!hasProperty('sonatypeUsername')) {ext.sonatypeUsername = ''}
if (!hasProperty('sonatypePassword')) {ext.sonatypePassword = ''}

uploadArchives {
    repositories.mavenDeployer {
        beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
        repository(url: 'https://oss.sonatype.org/service/local/staging/deploy/maven2') {
            authentication(userName: sonatypeUsername, password: sonatypePassword)
        }

        snapshotRepository(url: 'https://oss.sonatype.org/content/repositories/snapshots') {
            authentication(userName: sonatypeUsername, password: sonatypePassword)
        }
        pom = mavenPom
    }
}

task wrapper(type: Wrapper) {
   gradleVersion = "1.8"
}

task run(dependsOn: 'classes', type: JavaExec) {
   main = 'TestNanoBot'
   classpath = sourceSets.main.runtimeClasspath
}
